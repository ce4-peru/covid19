# ####### mergeando toda slas bases con cuartos #####
df_material<-merge(df_grietas,df_lad, by="unifecha",all = TRUE)
df_material<-merge(df_material,df_sillar, by="unifecha",all = TRUE)
df_material<-merge(df_material,df_madera, by="unifecha",all = TRUE)
df_material<-merge(df_material,df_plastico, by="unifecha",all = TRUE)
df_material<-merge(df_material,df_bloq, by="unifecha",all = TRUE)
df_material<-merge(df_material,df_dry, by="unifecha",all = TRUE)
df_material<-merge(df_material,df_noble, by="unifecha",all = TRUE)
#
names(df_material)
# [1] "unifecha"         "grietas"          "lad_chinche"      "sillar_chinche"
# [5] "madera_chinche"   "plastico_chinche" "bloqueta_chinche" "drywall_chinche"
# [9] "noble_chinche"
setnames(df_material,"lad_chinche","las_pa_chinche")
setnames(df_material,"sillar_chinche","sill_pa_chinche")
setnames(df_material,"madera_chinche","mad_pa_chinche")
setnames(df_material,"plastico_chinche","plas_pa_chinche")
setnames(df_material,"bloqueta_chinche","bloq_pa_chinche")
setnames(df_material,"drywall_chinche","dry_pa_chinche")
setnames(df_material,"noble_chinche","noble_pa_chinche")
################# mergeando las bases finales ############
##########################################################
df_final<-merge(df_total_masc_mueb,df_material,by = "unifecha",all.x = TRUE)
a3<-anti_join(df_total_masc_mueb,df_material)
b3<-semi_join(df_total_masc_mueb,df_material)
View(df_final)
write.csv(df_final, "~/cimex_aqp/Cimex_Archivos/data_drive/phd_tesis_claudia/base_cimex_202000417.csv",row.names = FALSE)
df_cimex<-fread("~/cimex_aqp/Cimex_Archivos/data_drive/phd_tesis_claudia/base_cimex_202000417.csv")
sapply(df_cimex,class)
sapply(df_cimex,class)
df_cimex$num_pared_insp<-as.numeric(df_cimex$num_pared_insp)
df_cimex$pared_chi_presen<-as.numeric(df_cimex$pared_chi_presen)
df_cimex$mueble_chi_presen<-as.numeric(df_cimex$mueble_chi_presen)
df_cimex$num_cama<-as.numeric(df_cimex$num_cama)
df_cimex$total_perso<-as.numeric(df_cimex$total_perso)
df_cimex$<-as.numeric(df_cimex$num_pared_insp)
df_cimex$num_pared_insp<-as.numeric(df_cimex$num_pared_insp)
df_cimex<-fread("~/cimex_aqp/Cimex_Archivos/data_drive/phd_tesis_claudia/base_cimex_202000417.csv")
sapply(df_cimex,class)
df_cimex$num_pared_insp<-as.numeric(df_cimex$num_pared_insp)
df_cimex$pared_chi_presen<-as.numeric(df_cimex$pared_chi_presen)
df_cimex$mueble_chi_presen<-as.numeric(df_cimex$mueble_chi_presen)
df_cimex$num_cama<-as.numeric(df_cimex$num_cama)
df_cimex$total_perso<-as.numeric(df_cimex$total_perso)
df_cimex$cuy<-as.numeric(df_cimex$cuy)
df_cimex$conejo<-as.numeric(df_cimex$conejo)
df_cimex$aves<-as.numeric(df_cimex$aves)
df_cimex$perro<-as.numeric(df_cimex$perro)
df_cimex$gato<-as.numeric(df_cimex$gato)
df_cimex$cap_total<-as.numeric(df_cimex$cap_total)
df_cimex$HAB_GATO<-as.numeric(df_cimex$HAB_GATO)
df_cimex$HAB_GATO_POLLO<-as.numeric(df_cimex$HAB_GATO_POLLO)
df_cimex$HAB_PERRO<-as.numeric(df_cimex$HAB_PERRO)
df_cimex$madera_chinche<-as.numeric(df_cimex$madera_chinche)
df_cimex$metal_chinche<-as.numeric(df_cimex$metal_chinche)
df_cimex$tela_chinche<-as.numeric(df_cimex$tela_chinche)
df_cimex$plastico_chinche<-as.numeric(df_cimex$plastico_chinche)
df_cimex$mapresa_chinche<-as.numeric(df_cimex$mapresa_chinche)
df_cimex$melamina_chinche<-as.numeric(df_cimex$melamina_chinche)
df_cimex$grietas<-as.numeric(df_cimex$grietas)
df_cimex$las_pa_chinche<-as.numeric(df_cimex$las_pa_chinche)
df_cimex$sill_pa_chinche<-as.numeric(df_cimex$sill_pa_chinche)
df_cimex$mad_pa_chinche<-as.numeric(df_cimex$mad_pa_chinche)
df_cimex$plas_pa_chinche<-as.numeric(df_cimex$plas_pa_chinche)
df_cimex$bloq_pa_chinchee<-as.numeric(df_cimex$bloq_pa_chinche)
df_cimex$dry_pa_chinche<-as.numeric(df_cimex$dry_pa_chinche)
df_cimex$noble_pa_chinche<-as.numeric(df_cimex$noble_pa_chinche)
write.csv(df_cimex, "~/cimex_aqp/Cimex_Archivos/data_drive/phd_tesis_claudia/base_cimex_202000417.csv",row.names = FALSE)
table(df_cimex$noble_pa_chinche)
View(df_cimex)
View(df_cimex)
table(df_cimex$cuy)
table(df_cimex$conejo)
table(df_cimex$perro)
table(df_cimex$aves)
table(df_cimex$gato)
library(data.table)
library(dplyr)
library(tidyr)
# library(tidyverse)
library(lubridate)
library(ggplot2)
library(directlabels)
library(reshape)
library(colorspace)
library(plotly)
#### si no tienes el paquete bbplot
library(devtools)
library(rlang)
library(digest)
library(glue)
# install devtools
library(devtools)
library(bbplot)
#library(bbc)# Me parece que esta libreria esta por las puras
#library(JLutils)
library(scales)
library("gridExtra")
library(cowplot)
d=data.frame(Fecha=as.Date(c("2020-03-06", "2020-03-11", "2020-03-12", "2020-03-15","2020-03-16", "2020-03-26","2020-03-31","2020-04-02","2020-04-07")), event=c(" Primer Caso", " Cierre colegios", "Cierre universidades", "Cierre de aeropuertos"," Inicio de cuarentena", " Extensión cuarentena", " Restricción por sexo","Toque de queda 18pm-5am","Extensión cuarentena"))
library(data.table)
library(dplyr)
library(tidyr)
library(tidyverse)
library(lubridate)
## set directory
setwd("~/covid19")
covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200421_CA.csv")
## Checar base
str(covid_dia) # 45 obs. of  14 variables
names(covid_dia)
head(covid_dia)
covid_dia <- mutate_if(covid_dia, is.character, toupper)
sapply(covid_dia, class)
table(covid_dia$FECHA)
covid_dia$FECHA2 <- covid_dia$FECHA
covid_dia <- separate(covid_dia,
col = "FECHA2",
into = c("DIA", "MES","ANO"),
sep = "/")
##### fecha to as.date format ####
covid_dia<-covid_dia %>%
mutate(FECHA = as.Date(as.character(FECHA), format = "%d/%m/%y"))
### ordenar base ###
names(covid_dia)
covid_dia <- covid_dia[,c(1, 15:17, 2:14)]
### Check NAs and inconsistencies ###
## Fecha
str(covid_dia$FECHA) # date
unique(covid_dia$FECHA)
sum(is.na(covid_dia$FECHA)) # 0 NAs
unique(covid_dia$TOTAL_POSITIVOS)
sum(is.na(covid_dia$TOTAL_POSITIVOS)) # 0 NAs
unique(covid_dia$TOTAL_PRUEBAS)
sum(is.na(covid_dia$TOTAL_PRUEBAS)) # 0 NAs
unique(covid_dia$TOTAL_DESCARTADOS)
sum(is.na(covid_dia$TOTAL_DESCARTADOS)) # 0 NAs
unique(covid_dia$POSITIVOS_DIA)
sum(is.na(covid_dia$POSITIVOS_DIA)) # 0 NAs
unique(covid_dia$PRUEBAS_DIA)
sum(is.na(covid_dia$PRUEBAS_DIA)) # 0 NAs
unique(covid_dia$DESCARTADOS_DIA)
sum(is.na(covid_dia$DESCARTADOS_DIA)) # 0
unique(covid_dia$RECUPERADOS)
sum(is.na(covid_dia$RECUPERADOS)) # 9 NAs
unique(covid_dia$FALLECIDOS)
sum(is.na(covid_dia$FALLECIDOS)) # 12 NAs
unique(covid_dia$HOSPITALIZADOS)
sum(is.na(covid_dia$HOSPITALIZADOS)) # 12 NAs
unique(covid_dia$HOSPITALIZADOS_UCI)
sum(is.na(covid_dia$HOSPITALIZADOS_UCI)) # 19 NAs
# unique(covid_dia$HOSPITALIZADOS_VENTILADOR)
# sum(is.na(covid_dia$HOSPITALIZADOS_VENTILADOR)) # 22 NAs
names(covid_dia)
# [1] "FECHA"              "DIA"                "MES"                "ANO"
# [5] "TOTAL_POSITIVOS"    "TOTAL_PRUEBAS"      "TOTAL_DESCARTADOS"  "POSITIVOS_DIA"
# [9] "PRUEBAS_DIA"        "DESCARTADOS_DIA"    "RECUPERADOS"        "FALLECIDOS"
# [13] "HOSPITALIZADOS"     "HOSPITALIZADOS_UCI" "OBSERVACION"        "FUENTE"
# [17] "ACTUALIZACION"
# Save csv.
write.csv(covid_dia, "data/modificadas/covidPE_PORdia_20200421_CA_clean.csv")
covid_dep <- fread("~/covid19/data/crudas/covidPE_DEP_20200421_CA.csv")
## Checar base
str(covid_dep) # 46 obs. of  31 variables
str(covid_dep) # 47 obs. of  31 variables
names(covid_dep)
covid_dep <- covid_dep[-46,-c(1,28:31)] #OJO
View(covid_dep)
setwd("~/covid19")
## Call data
# covid_dep <- fread("~/covid19/data/crudas/covidPE_DEP_20200412_MD.csv")
# covid_dep <- fread("~/covid19/data/crudas/covidPE_DEP_20200413_CA.csv")
# covid_dep <- fread("~/covid19/data/crudas/covidPE_DEP_20200414_CA.csv")
# covid_dep <- fread("~/covid19/data/crudas/covidPE_DEP_20200415_GF.csv")
# covid_dep <- fread("~/covid19/data/crudas/covidPE_DEP_20200416_CA.csv")
# covid_dep <- fread("~/covid19/data/crudas/covidPE_DEP_20200417_AL.csv")
# covid_dep <- fread("~/covid19/data/crudas/covidPE_DEP_20200418_MD.csv")
# covid_dep <- fread("~/covid19/data/crudas/covidPE_DEP_20200419_GF.csv")
# covid_dep <- fread("~/covid19/data/crudas/covidPE_DEP_20200420_MD.csv")
covid_dep <- fread("~/covid19/data/crudas/covidPE_DEP_20200421_CA.csv")
## Checar base
str(covid_dep) # 47 obs. of  31 variables
names(covid_dep)
# [1] "Día"         "Fecha"       "LIM"         "ARE"         "HUC"         "ICA"
# [7] "CUS"         "PIU"         "LAM"         "CAL"         "LAL"         "ANC"
# [13] "LOR"         "SAM"         "MDD"         "JUN"         "TUM"         "CAJ"
# [19] "PAS"         "TAC"         "AYA"         "HUA"         "APU"         "MOQ"
# [25] "PUN"         "AMA"         "UCA"         "Total"       "Acumulado"   "Descartados"
# [31] "Fuente"
# >
# Eliminar columnas y filas
#Recuerde aqui quitar la ultima columna y las columna y fila de "totales"
# Hasta la corrida de hoy 19 de abril era quitar la fila 46.
# Ma?ana 21 hay que sacar la fila 47.
covid_dep <- covid_dep[-47,-c(1,28:31)] #OJO
View(covid_dep)
head(covid_dep)
# Transformar todo texto a mayusculas
# Transform to character
# No me sale
covid_dep <- mutate_if(covid_dep, is.character, toupper)
sapply(covid_dep, class)
# Fecha         LIM         ARE         HUC         ICA         CUS         PIU
# "character"   "integer"   "integer"   "integer"   "integer"   "integer"   "integer"
# LAM         CAL         LAL         ANC         LOR         SAM         MDD
# "integer"   "integer"   "integer"   "integer"   "integer"   "integer"   "integer"
# JUN         TUM         CAJ         PAS         TAC         AYA         HUA
# "integer"   "integer"   "integer"   "integer"   "integer"   "integer"   "integer"
# APU         MOQ         PUN         AMA         UCA
# "integer"   "integer"   "integer"   "integer"   "integer"
# >
### variableby variable
table(covid_dep$Fecha)
covid_dep<-covid_dep %>%
mutate(Fecha1 = as.Date(as.character(Fecha), format = "%d/%m/%y"))
names(covid_dep)
covid_dep<- covid_dep%>%
select(-Fecha)
covid_dep2 <- gather(covid_dep,
key = "REGION",
value = "CASOS",
-Fecha1)
covid_dep2
covid_dep2$CASOS[is.na(covid_dep2$CASOS)] <- 0
write.csv(covid_dep2, "data/modificadas/covidPE_DEP_20200421_CA_clean.csv", row.names = FALSE)
acumulado<-fread("~/covid19/data/modificadas/covidPE_PORdia_20200421_CA_clean.csv")
setnames(acumulado,"TOTAL_POSITIVOS","Casos positivos")
setnames(acumulado,"TOTAL_PRUEBAS","Pruebas realizadas")
acumulado1<-melt(acumulado,id="FECHA")
acumulado1$value<-as.numeric(acumulado1$value)
target <- c("Casos positivos", "Pruebas realizadas")
acumulado1<-filter(acumulado1, variable %in% target)
acumulado1<-acumulado1 %>%
mutate(Fecha = as.Date(FECHA))
setwd("~/covid19/outputs_covid19/")
#
png(filename="20200421_pruebas_vs_positivos_COVID19.png", width=1100, height=600)
ggplot() +
geom_line(data = acumulado1, aes(Fecha, value, colour=variable,group=variable),alpha =1.6) +
scale_colour_manual(values=c("red", "blue"))+
scale_x_date(labels = date_format("%d-%b"),
breaks = as.Date(c("2020-03-06", "2020-03-11", "2020-03-12",
"2020-03-15","2020-03-16" ,"2020-03-26","2020-03-31",
"2020-04-02","2020-04-07")),
minor_breaks = NULL)+
# scale_x_date() +
geom_vline(data=d, mapping=aes(xintercept=Fecha), color="gray") +
geom_text(data=d, mapping=aes(x=Fecha, y =0,label=event), size=4, angle=90, vjust=-0.4, hjust=0)+
# theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
legend.position = c(0.35,0.95),
legend.justification = c("right","top"),
axis.text.x = element_text(vjust =0.60,angle=60,face = "bold.italic", size = 10))+
labs(title="SARS-CoV-2 en Perú", y="Pruebas positivas y pruebas realizadas",
x="Fecha", caption="Source :varios")+
theme(plot.title = element_text(face = "bold.italic",size = 5) )+
bbc_style()
#print(p)
dev.off()
png(filename="20200421_pruebas_vs_positivos_COVID19.png", width=1100, height=600)
ggplot() +
geom_line(data = acumulado1, aes(Fecha, value, colour=variable,group=variable),alpha =1.6) +
scale_colour_manual(values=c("red", "blue"))+
scale_x_date(labels = date_format("%d-%b"),
breaks = as.Date(c("2020-03-06", "2020-03-11", "2020-03-12",
"2020-03-15","2020-03-16" ,"2020-03-26","2020-03-31",
"2020-04-02","2020-04-07")),
minor_breaks = NULL)+
# scale_x_date() +
geom_vline(data=d, mapping=aes(xintercept=Fecha), color="gray") +
geom_text(data=d, mapping=aes(x=Fecha, y =0,label=event), size=4, angle=90, vjust=-0.4, hjust=0)+
# theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
legend.position = c(0.35,0.95),
legend.justification = c("right","top"),
axis.text.x = element_text(vjust =0.60,angle=60,face = "bold.italic", size = 10))+
labs(title="SARS-CoV-2 en Perú", y="Pruebas positivas y pruebas realizadas",
x="Fecha", caption="Source :varios")+
theme(plot.title = element_text(face = "bold.italic",size = 5) )+
bbc_style()
#print(p)
dev.off()
library(cowplot)
######### curvas nacionales de positivos y pruebas totales ##################
### leer esta data de los puntos de corte para ambos dibujos ####
d=data.frame(Fecha=as.Date(c("2020-03-06", "2020-03-11", "2020-03-12", "2020-03-15","2020-03-16", "2020-03-26","2020-03-31","2020-04-02","2020-04-07")), event=c(" Primer Caso", " Cierre colegios", "Cierre universidades", " Inicio de cuarentena","Cierre de aeropuertos", " Extensión cuarentena", " Restricción por sexo","Toque de queda 18pm-5am","Extensión cuarentena"))
acumulado<-fread("~/covid19/data/modificadas/covidPE_PORdia_20200421_CA_clean.csv")
setnames(acumulado,"TOTAL_POSITIVOS","Casos positivos")
setnames(acumulado,"TOTAL_PRUEBAS","Pruebas realizadas")
acumulado1<-melt(acumulado,id="FECHA")
acumulado1$value<-as.numeric(acumulado1$value)
target <- c("Casos positivos", "Pruebas realizadas")
acumulado1<-filter(acumulado1, variable %in% target)
acumulado1<-acumulado1 %>%
mutate(Fecha = as.Date(FECHA))
setwd("~/covid19/outputs_covid19/")
#
#Cambiar el nombre
png(filename="20200421_pruebas_vs_positivos_COVID19.png", width=1100, height=600)
ggplot() +
geom_line(data = acumulado1, aes(Fecha, value, colour=variable,group=variable),alpha =1.6) +
scale_colour_manual(values=c("red", "blue"))+
scale_x_date(labels = date_format("%d-%b"),
breaks = as.Date(c("2020-03-06", "2020-03-11", "2020-03-12",
"2020-03-15","2020-03-16" ,"2020-03-26","2020-03-31",
"2020-04-02","2020-04-07")),
minor_breaks = NULL)+
# scale_x_date() +
geom_vline(data=d, mapping=aes(xintercept=Fecha), color="gray") +
geom_text(data=d, mapping=aes(x=Fecha, y =0,label=event), size=4, angle=90, vjust=-0.4, hjust=0)+
# theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
legend.position = c(0.35,0.95),
legend.justification = c("right","top"),
axis.text.x = element_text(vjust =0.60,angle=60,face = "bold.italic", size = 10))+
labs(title="SARS-CoV-2 en Perú", y="Pruebas positivas y pruebas realizadas",
x="Fecha", caption="Source :varios")+
theme(plot.title = element_text(face = "bold.italic",size = 5) )+
bbc_style()
#print(p)
dev.off()
library(ggplot2)
library(ggmap)
library(data.table)
library(maptools)
library(rgeos)
library(Cairo)
library(scales)
library(RColorBrewer)
library(rgdal)
library(sp)
library(plyr)
library(tmap)
library(dplyr)
setwd("~/covid19/")
setwd("~/covid19/")
## Call data
# shapefile de peru por regiones
shpfile_peru <- "data/gadm0-1-2-3/peru_1.shp"
sh_peru <- rgdal::readOGR(shpfile_peru)
# casos de covid
caso_covid <- fread("~/covid19/data/modificadas/covidPE_DEP_20200421_CA_clean.csv")
# tabla de poblacion por regiones
pob_region <- read.csv("~/covid19/data/Poblacion por region.csv")
## Check the neighborhood shapefile data and plot
sh_peru@data$NAME_1
sh_peru$NAME_1 <- recode(sh_peru$NAME_1, `Lima Province` = "Lima")
unique(sh_peru$NAME_1)
sh_peru$NAME_1 <- factor(sh_peru$NAME_1)
levels(sh_peru@data$NAME_1)
# Change names
str(sh_peru@data)
levels(sh_peru$NAME_1) <- c(levels(sh_peru$NAME_1),
c("Apurimac", "Huanuco",
"Junin", "San Martin"))
sh_peru_df <- sh_peru@data
sh_peru[3,6] <- "Apurimac"
sh_peru[9,6] <- "Huanuco"
sh_peru[12,6] <- "Junin"
sh_peru[23,6] <- "San Martin"
sh_peru_df <- sh_peru@data
sh_peru@data$NAME_1 <- factor(sh_peru@data$NAME_1)
levels(sh_peru@data$NAME_1)
# [1] "Amazonas"      "Ancash"        "Arequipa"      "Ayacucho"      "Cajamarca"
# [6] "Callao"        "Cusco"         "Huancavelica"  "Ica"           "La Libertad"
# [11] "Lambayeque"    "Lima"          "Loreto"        "Madre de Dios" "Moquegua"
# [16] "Pasco"         "Piura"         "Puno"          "Tacna"         "Tumbes"
# [21] "Ucayali"       "Apurimac"      "Huanuco"       "Junin"         "San Martin"
## plotting shapefiles
plot(sh_peru)
sh_peru[[6]] <- toupper(sh_peru[[6]])
str(sh_peru@data$NAME_1)
unique(sh_peru@data$NAME_1)
# [1] "AMAZONAS"      "ANCASH"        "APURIMAC"      "AREQUIPA"      "AYACUCHO"
# [6] "CAJAMARCA"     "CALLAO"        "CUSCO"         "HUANUCO"       "HUANCAVELICA"
# [11] "ICA"           "JUNIN"         "LA LIBERTAD"   "LAMBAYEQUE"    "LIMA"
# [16] "LORETO"        "MADRE DE DIOS" "MOQUEGUA"      "PASCO"         "PIURA"
# [21] "PUNO"          "SAN MARTIN"    "TACNA"         "TUMBES"        "UCAYALI"
########################################################################
# Cuando haya tiempo
# Unir lo que era Lima province (fila 15) con Lima regi?n (fila 16)
plot(sh_peru[16,])
plot(sh_peru[15,], add=T, col="red")
plot(sh_peru[16,], add=T, col="green")
names(caso_covid)
colnames(caso_covid)[2] <- "NAME_1"
# Checar las variables. Que no haya tildes, espacios innecesarios o ""
unique(caso_covid$NAME_1)
mt <- tapply(caso_covid$CASOS, list(caso_covid$NAME_1), sum)
casos_region <- as.data.frame(mt)
casos_region <- cbind(NAME_LABEL = rownames(casos_region), casos_region)
colnames(casos_region)[2] <- "NUMERO_CASOS"
unique(casos_region$NAME_LABEL)
# [1] AMA ANC APU ARE AYA CAJ CAL CUS HUA HUC ICA JUN LAL LAM LIM
# [16] LOR MDD MOQ PAS PIU PUN SAM TAC TUM UCA
casos_region$REGION <- revalue(casos_region$NAME_LABEL,
c("ANC"="ANCASH",
"ARE"="AREQUIPA",
"AYA"="AYACUCHO",
"CAJ"="CAJAMARCA",
"CAL"="CALLAO",
"CUS"="CUSCO",
"HUC"="HUANUCO",
"ICA" ="ICA",
"JUN"="JUNIN",
"LAL"= "LA LIBERTAD",
"LAM"="LAMBAYEQUE",
"LIM"="LIMA",
"LOR"="LORETO",
"MDD"="MADRE DE DIOS",
"PAS"="PASCO",
"PIU"="PIURA",
"SAM"="SAN MARTIN",
"TAC"="TACNA",
"TUM"="TUMBES",
"AMA"="AMAZONAS",
"MOQ"="MOQUEGUA",
"APU"="APURIMAC",
"HUA"="HUANCAVELICA",
"PUN"="PUNO",
"UCA"="UCAYALI"))
## Checar csv de poblaciones regionales
names(pob_region) # "REGION"    "POBLACION"
pob_region[[1]] <- toupper(pob_region[[1]])
unique(pob_region$REGION) # todo ok
# [1] "AMAZONAS"      "ANCASH"        "APURIMAC"      "AREQUIPA"      "AYACUCHO"
# [6] "CAJAMARCA"     "CALLAO"        "CUSCO"         "HUANCAVELICA"  "HUANUCO"
# [11] "ICA"           "JUNIN"         "LA LIBERTAD"   "LAMBAYEQUE"    "LIMA"
# [16] "LORETO"        "MADRE DE DIOS" "MOQUEGUA"      "PASCO"         "PIURA"
# [21] "PUNO"          "SAN MARTIN"    "TACNA"         "TUMBES"        "UCAYALI"
## Merge cases with populations
region_values <- merge(casos_region, pob_region, by="REGION",
all.x=T, all.y=T)
## Calcula incidencias
region_values$NUMERO_CASOS <- as.numeric(region_values$NUMERO_CASOS)
region_values$POBLACION <- as.numeric(as.character(region_values$POBLACION))
region_values$incidencia <- region_values$NUMERO_CASOS/region_values$POBLACION
options(digits = 2)
region_values$incidencerate_100 <-(region_values$incidencia*100000)
## recode the names of the region_values data frame
setnames(region_values, old = "REGION",new = "NAME_1")
levels(region_values$NAME_1)
region_values <- region_values[,-2]
region_values$NAME_LABEL <- region_values$NAME_1
str(region_values$NAME_LABEL)
region_values$NAME_LABEL <- revalue(region_values$NAME_LABEL,
c("ANCASH"="ANC",
"AREQUIPA"="AQP",
"AYACUCHO" ="AYA",
"CAJAMARCA"="CAJ",
"CALLAO"="CAL",
"CUSCO" ="CUS",
"HUANUCO" ="HCO",
"ICA" ="ICA",
"JUNIN" ="JUN",
"LA LIBERTAD" ="LAL",
"LAMBAYEQUE" ="LAM",
"LIMA" ="LIM",
"LORETO"="LOR",
"MADRE DE DIOS"="MDD",
"PASCO" ="PAS",
"PIURA"="PIU",
"SAN MARTIN"="SAM",
"TACNA" ="TAC",
"TUMBES" ="TUM",
"AMAZONAS" ="AMA",
"MOQUEGUA"="MOQ",
"APURIMAC"="APU",
"HUANCAVELICA"="HUV",
"PUNO"="PUN",
"UCAYALI"="UCA"))
## Merge data with shapefile
tmp1 <- sh_peru
tmp1_map <- tmp1
tmp1_map@data <- join(sh_peru@data,region_values, by="NAME_1") # shp with data
tmp1_map_df <- tmp1_map@data
tmp1_map@data$NUMERO_CASOS[is.na(tmp1_map@data$NUMERO_CASOS)]<-0
tmp1_map@data$incidencia[is.na(tmp1_map@data$incidencia)]<-0
tmp1_map@data$incidencerate_100[is.na(tmp1_map@data$incidencerate_100)]<-0
tmp1_map_df <- tmp1_map@data
tmp1_map@data$brks <- cut(tmp1_map@data$incidencerate_100,
breaks=c(0.0, 1, 2, 5, 10, 20, 50, 100, 200),
labels=c("< 1", "1 a 2",
"2 a 5", "5 a 10", "10 a 20",
"20 a 50", "50 a 100", "> 100"))
names(tmp1_map@data) # check variables
tmp1_map_df <- tmp1_map@data
col <- c("ivory2", "lightcyan1", "lightblue2",
"lightskyblue",
"royalblue", "blue2", "navyblue", "black")
qtm <- qtm(tmp1_map, #fill = "incidencerate_100",
fill = "brks",
fill.palette = col,
fill.title="Incidencia por \n100,000 Hab") +
# tm_text("NAME_3", size="0.008", scale=1, root=4,
#         size.lowerbound = .1, bg.color="white", bg.alpha = .15,
#         legend.size.show = FALSE) +
tm_text("NAME_LABEL",size = 0.5)+
tm_layout(paste("Incidencia de \nSARS-CoV2 \nen Peru"), title.size = .92,
legend.title.size = 0.8,
legend.text.size = .6, legend.bg.color = NA,
legend.position = c("left","bottom"),
#outer.margins =c(0.05, 0.05, 0.05, 0.05)
#inner.margins =c(0.05, 0.05, 0.05, 0.05)
title.position = c(.05,.905)) #+ vs5
#tm_view(set.view = c(lon = 15, lat = 48, zoom = 10))
# tm_view(set.view = c(zoom = 10))
print(qtm)
tmap_save(qtm,
paste("outputs_covid19/20200421_Dep_COVID19_Incidencerate",
".png", sep=""),
width=2300, height=1380)
