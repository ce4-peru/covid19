## Call data
covid_ind <- fread("~/covid19/data/crudas/covidPE_DEP_20200412_MD.csv")
###### limpieza casos por indartamento #####
library(data.table)
library(dplyr)
library(tidyr)
library(tidyverse)
library(lubridate)
## set directory
setwd("~/covid19")
## Call data
covid_ind <- fread("~/covid19/data/crudas/covidPE_DEP_20200412_MD.csv")
## Call data
covid_dep <- fread("~/covid19/data/crudas/covidPE_DEP_20200412_MD.csv")
## Checar base
str(covid_dep) # 6838 obs. of  20 variables
names(covid_dep)
View(covid_dep)
# Eliminar primera columna
covid_dep <- covid_dep[,-1]
View(covid_dep)
head(covid_dep)
# Transform to character
covid_ind <- mutate_if(covid_ind, is.character, toupper)
# Transform to character
covid_dep <- mutate_if(covid_dep, is.character, toupper)
sapply(covid_dep, class)
View(covid_dep)
# Transform to character
covid_dep <- mutate_if(covid_dep, is.character, toupper)
sapply(covid_dep, class)
# Eliminar primera columna
covid_dep <- covid_dep[,-1]
head(covid_dep)
# Transform to character
covid_dep <- mutate_if(covid_dep, is.character, toupper)
sapply(covid_dep, class)
View(covid_dep)
sapply(covid_dep, class)
###### limpieza casos por indartamento #####
library(data.table)
library(dplyr)
library(tidyr)
library(tidyverse)
library(lubridate)
## set directory
setwd("~/covid19")
## Call data
covid_dep <- fread("~/covid19/data/crudas/covidPE_DEP_20200412_MD.csv")
## Checar base
str(covid_dep) # 38 obs. of  31 variables
names(covid_dep)
# [1] "DÃƒ­a"        "Fecha"       "LIM"         "ARE"         "HUC"
# [6] "ICA"         "CUS"         "PIU"         "LAM"         "CAL"
# [11] "LAL"         "ANC"         "LOR"         "SAM"         "MDD"
# [16] "JUN"         "TUM"         "CAJ"         "PAS"         "TAC"
# [21] "AYA"         "HUA"         "APU"         "MOQ"         "PUN"
# [26] "AMA"         "UCA"         "Total"       "Acumulado"   "Descartados"
# [31] "Fuente
# Eliminar primera columna
covid_dep <- covid_dep[,-1]
# Mas adelante  Sacar los "S1N0 del nombre de la variable
head(covid_dep)
# Transformar todo texto a mayusculas
# Transform to character
covid_dep <- mutate_if(covid_dep, is.character, toupper)
View(covid_dep)
###### incidencia de Peru casos COVID19#####
library(ggplot2)
library(ggmap)
library(data.table)
library(maptools)
library(rgeos)
library(Cairo)
library(scales)
library(RColorBrewer)
library(rgdal)
library(sp)
library(plyr)
library(tmap)
library(dplyr)
setwd("~/covid19/")
## Call data
# shapefile de peru por regiones
shpfile_peru <- "data/gadm0-1-2-3/peru_1.shp"
sh_peru <- rgdal::readOGR(shpfile_peru)
# casos de covid
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200402_MD_clean.csv")
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200403_MD_clean.csv")
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200404_MD_clean.csv")
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200405_CA_clean.csv")
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200406_MD_clean.csv")
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200407_CA_clean.csv")
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200408_MD_clean.csv")
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200409_CA_clean.csv")
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200410_MD_clean.csv")
caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200411_CA_clean.csv")
# tabla de poblacion por regiones
pob_region <- read.csv("~/covid19/data/Poblacion por region.csv")
View(pob_region)
## Check the neighborhood shapefile data and plot
sh_peru@data$NAME_1
# Que quede solo una Lima
sh_peru$NAME_1 <- recode(sh_peru$NAME_1, `Lima Province` = "Lima")
unique(sh_peru$NAME_1)
sh_peru$NAME_1 <- factor(sh_peru$NAME_1)
levels(sh_peru@data$NAME_1)
tr(sh_peru@data)
levels(sh_peru$NAME_1) <- c(levels(sh_peru$NAME_1),
c("Apurimac", "Huanuco",
"Junin", "San Martin"))
sh_peru_df <- sh_peru@data
sh_peru[3,6] <- "Apurimac"
sh_peru[9,6] <- "Huanuco"
sh_peru[12,6] <- "Junin"
sh_peru[23,6] <- "San Martin"
sh_peru_df <- sh_peru@data
sh_peru@data$NAME_1 <- factor(sh_peru@data$NAME_1)
levels(sh_peru@data$NAME_1)
## plotting shapefiles
plot(sh_peru)
# Transformar a mayusculas
sh_peru[[6]] <- toupper(sh_peru[[6]])
str(sh_peru@data$NAME_1)
unique(sh_peru@data$NAME_1)
########################################################################
# Cuando haya tiempo
# Unir lo que era Lima province (fila 15) con Lima regi?n (fila 16)
plot(sh_peru[16,])
plot(sh_peru[15,], add=T, col="red")
plot(sh_peru[16,], add=T, col="green")
## Check data of cases
names(caso_covid)
colnames(caso_covid)[1] <- "CE4_ID"
colnames(caso_covid)[7] <- "NAME_1"
# Checar las variables. Que no haya tildes, espacios innecesarios o ""
unique(caso_covid$NAME_1)
caso_covid[11,7] <- "HUANUCO"
caso_covid[10,7] <- "HUANUCO"
unique(caso_covid$NAME_1)
casos_region <- data.frame(table(caso_covid$NAME_1))
colnames(casos_region)[1] <- "REGION"
colnames(casos_region)[2] <- "NUMERO_CASOS"
## Checar csv de poblaciones regionales
names(pob_region) # "REGION"    "POBLACION"
pob_region[[1]] <- toupper(pob_region[[1]])
unique(pob_region$REGION) # todo ok
## Merge cases with populations
region_values <- merge(casos_region, pob_region, by="REGION",
all.x=T, all.y=T)
## Calcula incidencias
region_values$NUMERO_CASOS <- as.numeric(region_values$NUMERO_CASOS)
region_values$POBLACION <- as.numeric(as.character(region_values$POBLACION))
region_values$incidencia <- region_values$NUMERO_CASOS/region_values$POBLACION
options(digits = 2)
region_values$incidencerate_100 <-(region_values$incidencia*100000)
## recode the names of the region_values data frame
setnames(region_values, old = "REGION",new = "NAME_1")
levels(region_values$NAME_1)
## Create labels that does not occupy
region_values$NAME_LABEL <- region_values$NAME_1
str(region_values$NAME_LABEL)
region_values$NAME_LABEL <- revalue(region_values$NAME_LABEL,
c("ANCASH"="ANC",
"AREQUIPA"="AQP",
"AYACUCHO" ="AYA",
"CAJAMARCA"="CAJ",
"CALLAO"="CAL",
"CUSCO" ="CUS",
"HUANUCO" ="HCO",
"ICA" ="ICA",
"JUNIN" ="JUN",
"LA LIBERTAD" ="LAL",
"LAMBAYEQUE" ="LAM",
"LIMA" ="LIM",
"LORETO"="LOR",
"MADRE DE DIOS"="MDD",
"PASCO" ="PAS",
"PIURA"="PIU",
"SAN MARTIN"="SAM",
"TACNA" ="TAC",
"TUMBES" ="TUM",
"AMAZONAS" ="AMA",
"MOQUEGUA"="MOQ",
"APURIMAC"="APU",
"HUANCAVELICA"="HUV",
"PUNO"="PUN",
"UCAYALI"="UCA"))
View(region_values)
tmp1 <- sh_peru
tmp1_map <- tmp1
tmp1_map@data <- join(sh_peru@data,region_values, by="NAME_1") # shp with data
tmp1_map_df <- tmp1_map@data
tmp1_map@data$NUMERO_CASOS[is.na(tmp1_map@data$NUMERO_CASOS)]<-0
tmp1_map@data$incidencia[is.na(tmp1_map@data$incidencia)]<-0
tmp1_map@data$incidencerate_100[is.na(tmp1_map@data$incidencerate_100)]<-0
tmp1_map_df <- tmp1_map@data
tmp1_map@data$brks <- cut(tmp1_map@data$incidencerate_100,
breaks=c(-0.1, 0.0, 1, 2, 4, 8, 12, 16, 100),
labels=c("0", "< 1", "1 a 2",
"2 a 4", "4 a 8", "8 a 12",
#"8 a 10",
"12 a 16", "> 16"))
names(tmp1_map@data) # check variables
tmp1_map_df <- tmp1_map@data
View(tmp1_map_df)
col <- c("white", "ivory2", "lightcyan1", "lightblue2",
#"lightskyblue",
"royalblue", "blue2", "navyblue", "black")
View(tmp1_map_df)
qtm <- qtm(tmp1_map, #fill = "incidencerate_100",
fill = "brks",
fill.palette = col,
fill.title="Incidencia por \n100,000 Hab") +
# tm_text("NAME_3", size="0.008", scale=1, root=4,
#         size.lowerbound = .1, bg.color="white", bg.alpha = .15,
#         legend.size.show = FALSE) +
tm_text("NAME_LABEL",size = 0.5)+
tm_layout(paste("Incidencia de \nSARS-CoV2 \nen Peru"), title.size = .92,
legend.title.size = 0.8,
legend.text.size = .6, legend.bg.color = NA,
legend.position = c("left","bottom"),
#outer.margins =c(0.05, 0.05, 0.05, 0.05)
#inner.margins =c(0.05, 0.05, 0.05, 0.05)
title.position = c(.05,.905)) #+ vs5
print(qtm)
