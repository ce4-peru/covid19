<<<<<<< HEAD
sum(is.na(covid_ind$PROVINCIA)) # 4303 NAs
unique(covid_ind$DIRECCION)
sum(is.na(covid_ind$DIRECCION)) # 5246 NAs
sum(is.na(covid_ind$EDAD_A_n)) # 4972 NAs
sum(is.na(covid_ind$SEXOM1H0)) # 4908 NAs
unique(covid_ind$HOSPITALIZADOS1N0)
sum(is.na(covid_ind$HOSPITALIZADOS1N0)) # 4956 NAs
unique(covid_ind$CONTACTO)
sum(is.na(covid_ind$CONTACTO)) # 4985 NAs
unique(covid_ind$IMPORTADO)
sum(is.na(covid_ind$IMPORTADO)) # 5157 NAs
unique(covid_ind$ORIGEN_INTERNACIONAL)
sum(is.na(covid_ind$ORIGEN_INTERNACIONAL)) # 5206 NAs
unique(covid_ind$CASO_CONTACTO)
sum(is.na(covid_ind$CASO_CONTACTO)) #  5203 NAs
sum(is.na(covid_ind$RELACION_CONTACTO)) #  5844 NAs
unique(covid_ind$ORIGEN_NACIONAL)
sum(is.na(covid_ind$ORIGEN_NACIONAL)) # 5163 NAs
# Save dataset
=======
unique(covid_ind$CASO_CONTACTO)
# [1] NA  1
# Hay NA
## RELACION_CONTACTO
str(covid_ind$RELACION_CONTACTO) # chr
unique(covid_ind$RELACION_CONTACTO)
# [1] NA            "FAMILIAR"    "AMIGO"       ""            "TURISTA"
# [6] "RELACIONADO" "COMUNITARIO"
# Hay ""
covid_ind$RELACION_CONTACTO[covid_ind$RELACION_CONTACTO == ""] <- NA
## ORIGEN_NACIONAL
str(covid_ind$ORIGEN_NACIONAL) # chr
unique(covid_ind$ORIGEN_NACIONAL)
covid_ind$ORIGEN_NACIONAL[covid_ind$ORIGEN_NACIONAL == ""] <- NA
## Double check "" and count NAs
unique(covid_ind$CASO_ID)
sum(is.na(covid_ind$CASO_ID)) # 4299 NAs
unique(covid_ind$FECHA)
sum(is.na(covid_ind$FECHA)) # 0 NAs
unique(covid_ind$DIA)
sum(is.na(covid_ind$DIA)) # 0 NAs
unique(covid_ind$MES)
sum(is.na(covid_ind$MES)) # 0 NAs
unique(covid_ind$ANO)
sum(is.na(covid_ind$ANO)) # 0 NAs
unique(covid_ind$REGION)
sum(is.na(covid_ind$REGION)) # 0 NAs
unique(covid_ind$PROVINCIA)
sum(is.na(covid_ind$PROVINCIA)) # 3554 NAs
unique(covid_ind$DISTRITO)
sum(is.na(covid_ind$DISTRITO)) #  3781 NAs
unique(covid_ind$DIRECCION)
sum(is.na(covid_ind$DIRECCION)) # 4333 NAs
unique(covid_ind$EDAD_A_n)
sum(is.na(covid_ind$EDAD_A_n)) # 4077 NAs
unique(covid_ind$SEXOM1H0)
sum(is.na(covid_ind$SEXOM1H0)) # 4013 NAs
unique(covid_ind$HOSPITALIZADOS1N0)
sum(is.na(covid_ind$HOSPITALIZADOS1N0)) # 4057 NAs
unique(covid_ind$AISLADODOMICILS1N0)
sum(is.na(covid_ind$AISLADODOMICILS1N0)) #4058 NAs
unique(covid_ind$CONTACTO)
sum(is.na(covid_ind$CONTACTO)) # 4085 NAs
unique(covid_ind$IMPORTADO)
sum(is.na(covid_ind$IMPORTADO)) # 4244 NAs
unique(covid_ind$ORIGEN_INTERNACIONAL)
sum(is.na(covid_ind$ORIGEN_INTERNACIONAL)) # 4293 NAs
unique(covid_ind$CASO_CONTACTO)
sum(is.na(covid_ind$CASO_CONTACTO)) #  4290 NAs
unique(covid_ind$RELACION_CONTACTO)
sum(is.na(covid_ind$RELACION_CONTACTO)) #  4290 NAs
unique(covid_ind$ORIGEN_NACIONAL)
sum(is.na(covid_ind$ORIGEN_NACIONAL)) # 4250 NAs
>>>>>>> 0bc1bfd62aa0bed11cca6feae32df235b9fc6450
names(covid_ind)
# [1] "CASO_ID"              "FECHA"                "DIA"
# [4] "MES"                  "ANO"                  "REGION"
# [7] "PROVINCIA"            "DISTRITO"             "DIRECCION"
# [10] "EDAD_A"               "SEXOM1H0"             "HOSPITALIZADOS1N0"
# [13] "AISLADODOMICILS1N0"   "CONTACTO"             "IMPORTADO"
# [16] "ORIGEN_INTERNACIONAL" "CASO_CONTACTO"        "RELACION_CONTACTO"
# [19] "ORIGEN_NACIONAL"      "ENLACES1"             "ENLACES2"
# [22] "ENLACES3"             "OBSERVACIONES"        "EDAD_A_n"
covid_ind <- covid_ind[,c(1:10,24,11:23)]
names(covid_ind)
# [1] "CASO_ID"              "FECHA"                "DIA"
# [4] "MES"                  "ANO"                  "REGION"
# [7] "PROVINCIA"            "DISTRITO"             "DIRECCION"
# [10] "EDAD_A"               "EDAD_A_n"             "SEXOM1H0"
# [13] "HOSPITALIZADOS1N0"    "AISLADODOMICILS1N0"   "CONTACTO"
# [16] "IMPORTADO"            "ORIGEN_INTERNACIONAL" "CASO_CONTACTO"
# [19] "RELACION_CONTACTO"    "ORIGEN_NACIONAL"      "ENLACES1"
# [22] "ENLACES2"             "ENLACES3"             "OBSERVACIONES"
# Save csv.
# CAMBIA EL NOMBRE! NO TE OLVIDES!
<<<<<<< HEAD
#write.csv(covid_ind, "data/modificadas/covidPE_IND_20200403_MD_clean.csv")
#write.csv(covid_ind, "data/modificadas/covidPE_IND_20200404_MD_clean.csv")
#write.csv(covid_ind, "data/modificadas/covidPE_IND_20200405_CA_clean.csv")
#write.csv(covid_ind, "data/modificadas/covidPE_IND_20200406_CA_clean.csv")
#write.csv(covid_ind, "data/modificadas/covidPE_IND_20200407_CA_clean.csv")
#write.csv(covid_ind, "data/modificadas/covidPE_IND_20200408_MD_clean.csv")
#write.csv(covid_ind, "data/modificadas/covidPE_IND_20200409_CA_clean.csv")
write.csv(covid_ind, "data/modificadas/covidPE_IND_20200410_MD_clean.csv")
###### incidencia de Peru casos COVID19#####
=======
write.csv(covid_ind, "data/modificadas/covidPE_IND_20200409_CA_clean.csv")
write.csv(covid_ind, "data/modificadas/covidPE_IND_20200409_CA_clean.csv")
View(covid_ind)
write.csv(covid_ind, "data/modificadas/covidPE_IND_20200409_CA_clean.csv")
write.csv(covid_ind, "data/modificadas/covidPE_IND_20200409_CA_clean.csv")
setwd("~/covid19")
write.csv(covid_ind, "data/modificadas/covidPE_IND_20200409_CA_clean.csv")
library(data.table)
library(dplyr)
library(tidyr)
library(tidyverse)
library(lubridate)
## set directory
setwd("~/covid19")
covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200409_CA.csv")
## Checar base
str(covid_dia) # 33 obs. of  15 variables
names(covid_dia)
head(covid_dia)
# Transformar todo texto a mayusculas
# Transform to character
covid_dia <- mutate_if(covid_dia, is.character, toupper)
sapply(covid_dia, class)
table(covid_dia$FECHA)
covid_dia$FECHA2 <- covid_dia$FECHA
covid_dia <- separate(covid_dia,
col = "FECHA2",
into = c("DIA", "MES","ANO"),
sep = "/")
##### fecha to as.date format ####
covid_dia<-covid_dia %>%
mutate(FECHA = as.Date(as.character(FECHA), format = "%d/%m/%y"))
### ordenar base ###
names(covid_dia)
covid_dia <- covid_dia[,c(1, 16:18, 2:15)]
### Check NAs and inconsistencies ###
## Fecha
str(covid_dia$FECHA) # date
unique(covid_dia$FECHA)
sum(is.na(covid_dia$FECHA)) # 0 NAs
unique(covid_dia$TOTAL_POSITIVOS)
sum(is.na(covid_dia$TOTAL_POSITIVOS)) # 0 NAs
unique(covid_dia$TOTAL_PRUEBAS)
sum(is.na(covid_dia$TOTAL_PRUEBAS)) # 0 NAs
unique(covid_dia$TOTAL_DESCARTADOS)
sum(is.na(covid_dia$TOTAL_DESCARTADOS)) # 0 NAs
unique(covid_dia$POSITIVOS_DIA)
sum(is.na(covid_dia$POSITIVOS_DIA)) # 0 NAs
unique(covid_dia$PRUEBAS_DIA)
sum(is.na(covid_dia$PRUEBAS_DIA)) # 0 NAs
unique(covid_dia$DESCARTADOS_DIA)
sum(is.na(covid_dia$DESCARTADOS_DIA)) # 0
unique(covid_dia$RECUPERADOS)
sum(is.na(covid_dia$RECUPERADOS)) # 9 NAs
unique(covid_dia$FALLECIDOS)
sum(is.na(covid_dia$FALLECIDOS)) # 12 NAs
unique(covid_dia$HOSPITALIZADOS)
sum(is.na(covid_dia$HOSPITALIZADOS)) # 13 NAs
unique(covid_dia$HOSPITALIZADOS_UCI)
sum(is.na(covid_dia$HOSPITALIZADOS_UCI)) # 19 NAs
unique(covid_dia$HOSPITALIZADOS_VENTILADOR)
sum(is.na(covid_dia$HOSPITALIZADOS_VENTILADOR)) # 19 NAs
names(covid_dia)
write.csv(covid_dia, "data/modificadas/covidPE_PORdia_20200409_CA_clean.csv")
>>>>>>> 0bc1bfd62aa0bed11cca6feae32df235b9fc6450
library(ggplot2)
library(ggmap)
library(data.table)
library(maptools)
library(rgeos)
library(Cairo)
library(scales)
library(RColorBrewer)
library(rgdal)
library(sp)
library(plyr)
library(tmap)
library(dplyr)
setwd("~/covid19/")
## Call data
# shapefile de peru por regiones
shpfile_peru <- "data/gadm0-1-2-3/peru_1.shp"
sh_peru <- rgdal::readOGR(shpfile_peru)
# casos de covid
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200402_MD_clean.csv")
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200403_MD_clean.csv")
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200404_MD_clean.csv")
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200405_CA_clean.csv")
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200406_MD_clean.csv")
<<<<<<< HEAD
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200407_CA_clean.csv")
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200408_MD_clean.csv")
# caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200409_CA_clean.csv")
caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200410_MD_clean.csv")
# tabla de poblacion por regiones
=======
caso_covid <- fread("~/covid19/data/modificadas/covidPE_IND_20200409_CA_clean.csv")
>>>>>>> 0bc1bfd62aa0bed11cca6feae32df235b9fc6450
pob_region <- read.csv("~/covid19/data/Poblacion por region.csv")
## Check the neighborhood shapefile data and plot
sh_peru@data$NAME_1
# Lima and Lima Province should be the same.
# Que quede solo una Lima
sh_peru$NAME_1 <- recode(sh_peru$NAME_1, `Lima Province` = "Lima")
unique(sh_peru$NAME_1)
sh_peru$NAME_1 <- factor(sh_peru$NAME_1)
levels(sh_peru@data$NAME_1)
levels(sh_peru$NAME_1) <- c(levels(sh_peru$NAME_1),
c("Apurimac", "Huanuco",
"Junin", "San Martin"))
# Change names
str(sh_peru@data)
sh_peru_df <- sh_peru@data
sh_peru[9,6] <- "Huanuco"
sh_peru[3,6] <- "Apurimac"
sh_peru[12,6] <- "Junin"
sh_peru[23,6] <- "San Martin"
sh_peru_df <- sh_peru@data
sh_peru@data$NAME_1 <- factor(sh_peru@data$NAME_1)
levels(sh_peru@data$NAME_1)
# [1] "Amazonas"      "Ancash"        "Arequipa"      "Ayacucho"
# [5] "Cajamarca"     "Callao"        "Cusco"         "Huancavelica"
# [9] "Ica"           "La Libertad"   "Lambayeque"    "Lima"
# [13] "Loreto"        "Madre de Dios" "Moquegua"      "Pasco"
# [17] "Piura"         "Puno"          "Tacna"         "Tumbes"
# [21] "Ucayali"       "Apurimac"      "Huanuco"       "Junin"
# [25] "San Martin"
## plotting shapefiles
plot(sh_peru)
# Transformar a mayusculas
sh_peru[[6]] <- toupper(sh_peru[[6]])
## plotting shapefiles
plot(sh_peru)
# Transformar a mayusculas
sh_peru[[6]] <- toupper(sh_peru[[6]])
str(sh_peru@data$NAME_1)
unique(sh_peru@data$NAME_1)
plot(sh_peru[16,])
plot(sh_peru[15,], add=T, col="red")
plot(sh_peru[16,], add=T, col="green")
#########################################################################
## Check data of cases
names(caso_covid)
colnames(caso_covid)[1] <- "CE4_ID"
# Checar las variables. Que no haya tildes, espacios innecesarios o ""
unique(caso_covid$NAME_1)
<<<<<<< HEAD
colnames(caso_covid)[7] <- "NAME_1"
#### SI ES LAPTOP DE CLAU, PARECE QUE HAY QUE CORRER ESTAS LINEAS ########
# Eliminar NAs y tildes
# caso_covid$NAME_1[caso_covid$Caso_ID %in% c(10,11)] <- "HUANUCO"
# # no funciona no s[e por que]
=======
View(caso_covid)
>>>>>>> 0bc1bfd62aa0bed11cca6feae32df235b9fc6450
caso_covid[11,7] <- "HUANUCO"
caso_covid[10,7] <- "HUANUCO"
unique(caso_covid$NAME_1)
# [1] "LIMA"          "AREQUIPA"      "HUANUCO"       "ICA"           "CUSCO"
# [6] "ANCASH"        "CALLAO"        "LA LIBERTAD"   "LAMBAYEQUE"    "PIURA"
# [11] "LORETO"        "MADRE DE DIOS" "SAN MARTIN"    "JUNIN"         "TUMBES"
# [16] "CAJAMARCA"     "PASCO"         "AYACUCHO"      "TACNA"         "HUANCAVELICA"
# [21] "APURIMAC"      "MOQUEGUA"      "PUNO"          "AMAZONAS"
casos_region <- data.frame(table(caso_covid$NAME_1))
colnames(casos_region)[1] <- "REGION"
colnames(casos_region)[2] <- "NUMERO_CASOS"
## Checar csv de poblaciones regionales
names(pob_region) # "REGION"    "POBLACION"
pob_region[[1]] <- toupper(pob_region[[1]])
unique(pob_region$REGION) # todo ok
region_values <- merge(casos_region, pob_region, by="REGION",
all.x=T, all.y=T)
## Calcula incidencias
region_values$NUMERO_CASOS <- as.numeric(region_values$NUMERO_CASOS)
region_values$POBLACION <- as.numeric(as.character(region_values$POBLACION))
region_values$incidencia <- region_values$NUMERO_CASOS/region_values$POBLACION
options(digits = 2)
region_values$incidencerate_100 <-(region_values$incidencia*100000)
## recode the names of the region_values data frame
setnames(region_values, old = "REGION",new = "NAME_1")
levels(region_values$NAME_1)
region_values$NAME_LABEL <- region_values$NAME_1
str(region_values$NAME_LABEL)
region_values$NAME_LABEL <- revalue(region_values$NAME_LABEL,
c("ANCASH"="ANC",
"AREQUIPA"="AQP",
"AYACUCHO" ="AYA",
"CAJAMARCA"="CAJ",
"CALLAO"="CAL",
"CUSCO" ="CUS",
"HUANUCO" ="HCO",
"ICA" ="ICA",
"JUNIN" ="JUN",
"LA LIBERTAD" ="LAL",
"LAMBAYEQUE" ="LAM",
"LIMA" ="LIM",
"LORETO"="LOR",
"MADRE DE DIOS"="MDD",
"PASCO" ="PAS",
"PIURA"="PIU",
"SAN MARTIN"="SAM",
"TACNA" ="TAC",
"TUMBES" ="TUM",
"AMAZONAS" ="AMA",
"MOQUEGUA"="MOQ",
"APURIMAC"="APU",
"HUANCAVELICA"="HUV",
"PUNO"="PUN",
"UCAYALI"="UCA"))
## Merge data with shapefile
tmp1 <- sh_peru
tmp1_map <- tmp1
tmp1_map@data <- join(sh_peru@data,region_values, by="NAME_1") # shp with data
tmp1_map_df <- tmp1_map@data
tmp1_map@data$NUMERO_CASOS[is.na(tmp1_map@data$NUMERO_CASOS)]<-0
tmp1_map@data$incidencia[is.na(tmp1_map@data$incidencia)]<-0
tmp1_map_df <- tmp1_map@data
<<<<<<< HEAD
tmp1_map@data$incidencerate_100[is.na(tmp1_map@data$incidencerate_100)]<-0
=======
>>>>>>> 0bc1bfd62aa0bed11cca6feae32df235b9fc6450
tmp1_map@data$brks <- cut(tmp1_map@data$incidencerate_100,
breaks=c(-0.1, 0.0, 1, 2, 4, 8, 12, 16, 100),
labels=c("0", "< 1", "1 a 2",
"2 a 4", "4 a 8", "8 a 12",
#"8 a 10",
"12 a 16", "> 16"))
names(tmp1_map@data) # check variables
tmp1_map_df <- tmp1_map@data
# Create the map qtm
col <- c("white", "ivory2", "lightcyan1", "lightblue2",
#"lightskyblue",
"royalblue", "blue2", "navyblue", "black")
<<<<<<< HEAD
# crear mapa
=======
# col <- c("ivory2", "lightcyan1", "lightblue2", "lightskyblue",
#           "royalblue", "blue2", "navyblue", "black")
# try snow2 too
# interactive view
#tmap_mode("view")
# crear mapa
qtm <- qtm(tmp1_map, #fill = "incidencerate_100",
fill = "brks",
fill.palette = col,
fill.title="Incidencia por \n100,000 Hab") +
# tm_text("NAME_3", size="0.008", scale=1, root=4,
#         size.lowerbound = .1, bg.color="white", bg.alpha = .15,
#         legend.size.show = FALSE) +
tm_text("NAME_LABEL",size = 0.5)+
tm_layout(paste("Incidencia de \nSARS-CoV2 \nen Per?"), title.size = .92,
legend.title.size = 0.8,
legend.text.size = .6, legend.bg.color = NA,
legend.position = c("left","bottom"),
#outer.margins =c(0.05, 0.05, 0.05, 0.05)
#inner.margins =c(0.05, 0.05, 0.05, 0.05)
title.position = c(.05,.905)) #+ vs5
#tm_view(set.view = c(lon = 15, lat = 48, zoom = 10))
# tm_view(set.view = c(zoom = 10))
print(qtm)
qtm
tmap_save(qtm,
paste("outputs_covid19/20200409_Dep_COVID19_Incidencerate",
".png", sep=""),
width=2300, height=1380)
>>>>>>> 0bc1bfd62aa0bed11cca6feae32df235b9fc6450
qtm <- qtm(tmp1_map, #fill = "incidencerate_100",
fill = "brks",
fill.palette = col,
fill.title="Incidencia por \n100,000 Hab") +
# tm_text("NAME_3", size="0.008", scale=1, root=4,
#         size.lowerbound = .1, bg.color="white", bg.alpha = .15,
#         legend.size.show = FALSE) +
tm_text("NAME_LABEL",size = 0.5)+
tm_layout(paste("Incidencia de \nSARS-CoV2 \nen Peru"), title.size = .92,
legend.title.size = 0.8,
legend.text.size = .6, legend.bg.color = NA,
legend.position = c("left","bottom"),
#outer.margins =c(0.05, 0.05, 0.05, 0.05)
#inner.margins =c(0.05, 0.05, 0.05, 0.05)
title.position = c(.05,.905)) #+ vs5
print(qtm)
# RECUERDA CAMBIAR EL NOMBRE DEL ARCHIVO!
tmap_save(qtm,
<<<<<<< HEAD
paste("outputs_covid19/20200410_Dep_COVID19_Incidencerate",
".png", sep=""),
width=2300, height=1380)
library(data.table)
library(dplyr)
library(tidyr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(directlabels)
library(reshape)
library(colorspace)
##
# acumulado<-fread("~/covid19/data/modificadas/covidPE_PORdia_20200406_MD_clean.csv")
# acumulado<-fread("~/covid19/data/modificadas/covidPE_PORdia_20200407_CA_clean.csv.csv")
acumulado<-fread("~/covid19/data/modificadas/covidPE_PORdia_20200410_MD_clean.csv")
acumulado1<-melt(acumulado,id="FECHA")
acumulado1$value<-as.numeric(acumulado1$value)
target <- c("TOTAL_POSITIVOS", "TOTAL_PRUEBAS")
acumulado1<-filter(acumulado1, variable %in% target)
setwd("~/covid19/outputs_covid19/")
library(data.table)
library(dplyr)
library(tidyr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(directlabels)
library(reshape)
library(colorspace)
######## ploting national cases with overlaping line ##########
# acumulado<-fread("~/covid19/data/modificadas/covidPE_PORdia_20200406_MD_clean.csv")
# acumulado<-fread("~/covid19/data/modificadas/covidPE_PORdia_20200407_CA_clean.csv.csv")
acumulado<-fread("~/covid19/data/modificadas/covidPE_PORdia_20200410_MD_clean.csv")
acumulado1<-melt(acumulado,id="FECHA")
acumulado1$value<-as.numeric(acumulado1$value)
target <- c("TOTAL_POSITIVOS", "TOTAL_PRUEBAS")
acumulado1<-filter(acumulado1, variable %in% target)
setwd("~/covid19/outputs_covid19/")
###### limpieza casos por indartamento #####
library(data.table)
library(dplyr)
library(tidyr)
library(tidyverse)
library(lubridate)
## set directory
setwd("~/covid19")
## Call data
#covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200403_MD.csv")
# covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200404_MD.csv")
# covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200405_CA.csv")
#covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200406_MD.csv")
# covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200407_CA.csv")
# covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200408_MD.csv")
# covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200409_CA.csv")
covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200410_MD.csv")
str(covid_dia) # 34 obs. of  15 variables
names(covid_dia)
# [1] "FECHA"                     "TOTAL_POSITIVOS"           "TOTAL_PRUEBAS"
# [4] "TOTAL_DESCARTADOS"         "POSITIVOS_DIA"             "PRUEBAS_DIA"
# [7] "DESCARTADOS_DIA"           "RECUPERADOS"               "FALLECIDOS"
# [10] "HOSPITALIZADOS"            "HOSPITALIZADOS_UCI"        "HOSPITALIZADOS_VENTILADOR"
# [13] "OBSERVACION"               "FUENTE"                    "ACTUALIZACION"
# Mas adelante  Sacar los "S1N0 del nombre de la variable
head(covid_dia)
# Transformar todo texto a mayusculas
# Transform to character
covid_dia <- mutate_if(covid_dia, is.character, toupper)
sapply(covid_dia, class)
# FECHA           TOTAL_POSITIVOS             TOTAL_PRUEBAS
# "character"                 "integer"                 "integer"
# TOTAL_DESCARTADOS             POSITIVOS_DIA               PRUEBAS_DIA
# "integer"                 "integer"                 "integer"
# DESCARTADOS_DIA               RECUPERADOS                FALLECIDOS
# "integer"                 "integer"                 "integer"
# HOSPITALIZADOS        HOSPITALIZADOS_UCI HOSPITALIZADOS_VENTILADOR
# "integer"                 "integer"                 "integer"
# FUENTE             ACTUALIZACION               OBSERVACION
# "character"               "character"               "character"
### variable by variable
### Fecha ####
table(covid_dia$FECHA)
covid_dia$FECHA2 <- covid_dia$FECHA
covid_dia <- separate(covid_dia,
col = "FECHA2",
into = c("DIA", "MES","ANO"),
sep = "/")
##### fecha to as.date format ####
covid_dia<-covid_dia %>%
mutate(FECHA = as.Date(as.character(FECHA), format = "%d/%m/%y"))
### ordenar base ###
names(covid_dia)
# [1] "FECHA"                     "TOTAL_POSITIVOS"           "TOTAL_PRUEBAS"
# [4] "TOTAL_DESCARTADOS"         "POSITIVOS_DIA"             "PRUEBAS_DIA"
# [7] "DESCARTADOS_DIA"           "RECUPERADOS"               "FALLECIDOS"
# [10] "HOSPITALIZADOS"            "HOSPITALIZADOS_UCI"        "HOSPITALIZADOS_VENTILADOR"
# [13] "FUENTE"                    "ACTUALIZACION"             "OBSERVACION"
# [16] "DIA"                       "MES"                       "ANO"
covid_dia <- covid_dia[,c(1, 16:18, 2:15)]
### Check NAs and inconsistencies ###
#
###### limpieza casos por indartamento #####
library(data.table)
library(dplyr)
library(tidyr)
library(tidyverse)
library(lubridate)
## set directory
setwd("~/covid19")
## Call data
#covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200403_MD.csv")
# covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200404_MD.csv")
# covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200405_CA.csv")
#covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200406_MD.csv")
# covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200407_CA.csv")
# covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200408_MD.csv")
# covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200409_CA.csv")
covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200410_MD.csv")
## Checar base
str(covid_dia) # 34 obs. of  15 variables
names(covid_dia)
# [1] "FECHA"                     "TOTAL_POSITIVOS"           "TOTAL_PRUEBAS"
# [4] "TOTAL_DESCARTADOS"         "POSITIVOS_DIA"             "PRUEBAS_DIA"
# [7] "DESCARTADOS_DIA"           "RECUPERADOS"               "FALLECIDOS"
# [10] "HOSPITALIZADOS"            "HOSPITALIZADOS_UCI"        "HOSPITALIZADOS_VENTILADOR"
# [13] "OBSERVACION"               "FUENTE"                    "ACTUALIZACION"
# Mas adelante  Sacar los "S1N0 del nombre de la variable
head(covid_dia)
# Transformar todo texto a mayusculas
# Transform to character
covid_dia <- mutate_if(covid_dia, is.character, toupper)
sapply(covid_dia, class)
# FECHA           TOTAL_POSITIVOS             TOTAL_PRUEBAS
# "character"                 "integer"                 "integer"
# TOTAL_DESCARTADOS             POSITIVOS_DIA               PRUEBAS_DIA
# "integer"                 "integer"                 "integer"
# DESCARTADOS_DIA               RECUPERADOS                FALLECIDOS
# "integer"                 "integer"                 "integer"
# HOSPITALIZADOS        HOSPITALIZADOS_UCI HOSPITALIZADOS_VENTILADOR
# "integer"                 "integer"                 "integer"
# FUENTE             ACTUALIZACION               OBSERVACION
# "character"               "character"               "character"
### variable by variable
### Fecha ####
table(covid_dia$FECHA)
# 01/04/2020 02/04/2020 03/04/2020 04/04/2020 05/04/2020 06/03/2020 06/04/2020 07/03/2020 07/04/2020
# 1          1          1          1          1          1          1          1          1
# 08/03/2020 08/04/2020 09/03/2020 10/03/2020 11/03/2020 12/03/2020 13/03/2020 14/03/2020 15/03/2020
# 1          1          1          1          1          1          1          1          1
# 16/03/2020 17/03/2020 18/03/2020 19/03/2020 20/03/2020 21/03/2020 22/03/2020 23/03/2020 24/03/2020
# 1          1          1          1          1          1          1          1          1
# 25/03/2020 26/03/2020 27/03/2020 28/03/2020 29/03/2020 30/03/2020 31/03/2020
# 1          1          1          1          1          1          1
# # 1
#### separando caracteres en varias columnas ######
covid_dia$FECHA2 <- covid_dia$FECHA
covid_dia <- separate(covid_dia,
col = "FECHA2",
into = c("DIA", "MES","ANO"),
sep = "/")
##### fecha to as.date format ####
covid_dia<-covid_dia %>%
mutate(FECHA = as.Date(as.character(FECHA), format = "%d/%m/%y"))
### ordenar base ###
names(covid_dia)
# [1] "FECHA"                     "TOTAL_POSITIVOS"           "TOTAL_PRUEBAS"
# [4] "TOTAL_DESCARTADOS"         "POSITIVOS_DIA"             "PRUEBAS_DIA"
# [7] "DESCARTADOS_DIA"           "RECUPERADOS"               "FALLECIDOS"
# [10] "HOSPITALIZADOS"            "HOSPITALIZADOS_UCI"        "HOSPITALIZADOS_VENTILADOR"
# [13] "FUENTE"                    "ACTUALIZACION"             "OBSERVACION"
# [16] "DIA"                       "MES"                       "ANO"
###### limpieza casos por indartamento #####
library(data.table)
library(dplyr)
library(tidyr)
library(tidyverse)
library(lubridate)
## set directory
setwd("~/covid19")
## Call data
#covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200403_MD.csv")
# covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200404_MD.csv")
# covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200405_CA.csv")
#covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200406_MD.csv")
# covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200407_CA.csv")
# covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200408_MD.csv")
# covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200409_CA.csv")
covid_dia <- fread("~/covid19/data/crudas/covidPE_pordia_20200410_MD.csv")
## Checar base
str(covid_dia) # 34 obs. of  15 variables
names(covid_dia)
View(covid_dia)
View(covid_dia)
names(covid_dia)
head(covid_dia)
# Transform to character
covid_dia <- mutate_if(covid_dia, is.character, toupper)
sapply(covid_dia, class)
### variable by variable
### Fecha ####
table(covid_dia$FECHA)
#### separando caracteres en varias columnas ######
covid_dia$FECHA2 <- covid_dia$FECHA
covid_dia <- separate(covid_dia,
col = "FECHA2",
into = c("DIA", "MES","ANO"),
sep = "/")
##### fecha to as.date format ####
covid_dia<-covid_dia %>%
mutate(FECHA = as.Date(as.character(FECHA), format = "%d/%m/%y"))
### ordenar base ###
names(covid_dia)
covid_dia <- covid_dia[,c(1, 15:17, 2:14)]
## Fecha
str(covid_dia$FECHA) # date
unique(covid_dia$FECHA)
sum(is.na(covid_dia$FECHA)) # 0 NAs
unique(covid_dia$TOTAL_POSITIVOS)
sum(is.na(covid_dia$TOTAL_POSITIVOS)) # 0 NAs
unique(covid_dia$TOTAL_PRUEBAS)
sum(is.na(covid_dia$TOTAL_PRUEBAS)) # 0 NAs
unique(covid_dia$TOTAL_DESCARTADOS)
sum(is.na(covid_dia$TOTAL_DESCARTADOS)) # 0 NAs
unique(covid_dia$POSITIVOS_DIA)
sum(is.na(covid_dia$POSITIVOS_DIA)) # 0 NAs
unique(covid_dia$PRUEBAS_DIA)
sum(is.na(covid_dia$PRUEBAS_DIA)) # 0 NAs
unique(covid_dia$DESCARTADOS_DIA)
sum(is.na(covid_dia$DESCARTADOS_DIA)) # 0
unique(covid_dia$RECUPERADOS)
sum(is.na(covid_dia$RECUPERADOS)) # 9 NAs
unique(covid_dia$FALLECIDOS)
sum(is.na(covid_dia$FALLECIDOS)) # 12 NAs
unique(covid_dia$HOSPITALIZADOS)
sum(is.na(covid_dia$HOSPITALIZADOS)) # 14 NAs
unique(covid_dia$HOSPITALIZADOS_UCI)
sum(is.na(covid_dia$HOSPITALIZADOS_UCI)) # 21 NAs
unique(covid_dia$HOSPITALIZADOS_VENTILADOR)
sum(is.na(covid_dia$HOSPITALIZADOS_VENTILADOR)) # 22 NAs
names(covid_dia)
# Save csv.
# CAMBIA EL NOMBRE! NO TE OLVIDES!
write.csv(covid_dia, "data/modificadas/covidPE_PORdia_20200410_MD_clean.csv")
library(data.table)
library(dplyr)
library(tidyr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(directlabels)
library(reshape)
library(colorspace)
######## ploting national cases with overlaping line ##########
# acumulado<-fread("~/covid19/data/modificadas/covidPE_PORdia_20200406_MD_clean.csv")
# acumulado<-fread("~/covid19/data/modificadas/covidPE_PORdia_20200407_CA_clean.csv.csv")
acumulado<-fread("~/covid19/data/modificadas/covidPE_PORdia_20200410_MD_clean.csv")
acumulado1<-melt(acumulado,id="FECHA")
acumulado1$value<-as.numeric(acumulado1$value)
target <- c("TOTAL_POSITIVOS", "TOTAL_PRUEBAS")
=======
paste("outputs_covid19/20200409_Dep_COVID19_Incidencerate",
".png", sep=""),
width=2300, height=1380)
>>>>>>> 0bc1bfd62aa0bed11cca6feae32df235b9fc6450
library(data.table)
library(dplyr)
library(tidyr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(directlabels)
library(reshape)
library(colorspace)
<<<<<<< HEAD
######## ploting national cases with overlaping line ##########
# acumulado<-fread("~/covid19/data/modificadas/covidPE_PORdia_20200406_MD_clean.csv")
# acumulado<-fread("~/covid19/data/modificadas/covidPE_PORdia_20200407_CA_clean.csv.csv")
acumulado<-fread("~/covid19/data/modificadas/covidPE_PORdia_20200410_MD_clean.csv")
=======
acumulado<-fread("~/covid19/data/modificadas/covidPE_PORdia_20200409_CA_clean.csv")
>>>>>>> 0bc1bfd62aa0bed11cca6feae32df235b9fc6450
acumulado1<-melt(acumulado,id="FECHA")
acumulado1$value<-as.numeric(acumulado1$value)
target <- c("TOTAL_POSITIVOS", "TOTAL_PRUEBAS")
acumulado1<-filter(acumulado1, variable %in% target)
setwd("~/covid19/outputs_covid19/")
# cambio n[umero
<<<<<<< HEAD
png(filename="20200410_pruebas_vs_positivos_COVID19.png")
=======
png(filename="20200409_pruebas_vs_positivos_COVID19.png")
ggplot(acumulado1, aes(FECHA, value, colour=variable,group=variable)) +
geom_line() +
scale_colour_manual(values=c("red", "blue"))+
theme(legend.position = c(0.35,0.95),
legend.justification = c("right","top"))+
theme(axis.text.x = element_text(angle=90))+
labs(title="SARS-CoV2 en Peru", y="Pruebas positivas y pruebas realizadas",
x="Fecha", caption="Source :varios")+
geom_vline(xintercept = "2020-03-06") +
geom_vline(xintercept = "2020-03-11") +
geom_vline(xintercept = "2020-03-12") +
geom_vline(xintercept = "2020-03-15") +
geom_vline(xintercept = "2020-03-26") +
geom_vline(xintercept = "2020-03-31") +
geom_vline(xintercept = "2020-04-02") +
annotate("text", x = "2020-03-07", y = 3000,
label = " Primer Caso", size = 2.5)+
annotate("text", x = "2020-03-11", y = 4000,
label = " Cierre colegios", size = 2.5)+
annotate("text", x = "2020-03-12", y = 5000,
label = " Cierre universidades", size = 2.5)+
annotate("text", x = "2020-03-15", y = 6000,
label = " inicio de cuarentena", size = 2.5)+
annotate("text", x = "2020-03-26", y = 7000,
label = " Extension cuarentena", size = 2.5)+
annotate("text", x = "2020-04-02", y = 9000,
label = " Restriccion por sexo", size = 2.5)+
annotate("text", x = "2020-03-31", y = 8000,
label = " toque de queda 18pm-5am", size = 2.5)
dev.off()
>>>>>>> 0bc1bfd62aa0bed11cca6feae32df235b9fc6450
ggplot(acumulado1, aes(FECHA, value, colour=variable,group=variable)) +
geom_line() +
scale_colour_manual(values=c("red", "blue"))+
theme(legend.position = c(0.35,0.95),
legend.justification = c("right","top"))+
theme(axis.text.x = element_text(angle=90))+
labs(title="SARS-CoV2 en Peru", y="Pruebas positivas y pruebas realizadas",
x="Fecha", caption="Source :varios")+
geom_vline(xintercept = "2020-03-06") +
geom_vline(xintercept = "2020-03-11") +
geom_vline(xintercept = "2020-03-12") +
geom_vline(xintercept = "2020-03-15") +
geom_vline(xintercept = "2020-03-26") +
geom_vline(xintercept = "2020-03-31") +
geom_vline(xintercept = "2020-04-02") +
geom_vline(xintercept = "2020-04-08") +
annotate("text", x = "2020-03-07", y = 3000,
label = " Primer Caso", size = 2.5)+
annotate("text", x = "2020-03-11", y = 4000,
label = " Cierre colegios", size = 2.5)+
annotate("text", x = "2020-03-12", y = 5000,
label = " Cierre universidades", size = 2.5)+
annotate("text", x = "2020-03-15", y = 6000,
label = " inicio de cuarentena", size = 2.5)+
annotate("text", x = "2020-03-26", y = 7000,
label = " Extension cuarentena", size = 2.5)+
annotate("text", x = "2020-04-02", y = 9000,
label = " Restriccion por sexo", size = 2.5)+
annotate("text", x = "2020-03-31", y = 8000,
<<<<<<< HEAD
=======
label = " toque de queda 18pm-5am", size = 2.5)
ggplot(acumulado1, aes(FECHA, value, colour=variable,group=variable)) +
geom_line() +
scale_colour_manual(values=c("red", "blue"))+
theme(legend.position = c(0.35,0.95),
legend.justification = c("right","top"))+
theme(axis.text.x = element_text(angle=90))+
labs(title="SARS-CoV2 en Peru", y="Pruebas positivas y pruebas realizadas",
x="Fecha", caption="Source :varios")+
geom_vline(xintercept = "2020-03-06") +
geom_vline(xintercept = "2020-03-11") +
geom_vline(xintercept = "2020-03-12") +
geom_vline(xintercept = "2020-03-15") +
geom_vline(xintercept = "2020-03-26") +
geom_vline(xintercept = "2020-03-31") +
geom_vline(xintercept = "2020-04-02") +
geom_vline(xintercept = "2020-04-08") +
annotate("text", x = "2020-03-07", y = 3000,
label = " Primer Caso", size = 2.5)+
annotate("text", x = "2020-03-11", y = 4000,
label = " Cierre colegios", size = 2.5)+
annotate("text", x = "2020-03-12", y = 5000,
label = " Cierre universidades", size = 2.5)+
annotate("text", x = "2020-03-15", y = 6000,
label = " inicio de cuarentena", size = 2.5)+
annotate("text", x = "2020-03-26", y = 7000,
label = " Extension cuarentena", size = 2.5)+
annotate("text", x = "2020-04-02", y = 9000,
label = " Restriccion por sexo", size = 2.5)+
annotate("text", x = "2020-03-31", y = 8000,
label = " toque de queda 18pm-5am", size = 2.5)+
annotate("text", x = "2020-04-08", y = 10000,
label = " Extension cuarentena", size = 2.5)
ggplot(acumulado1, aes(FECHA, value, colour=variable,group=variable)) +
geom_line() +
scale_colour_manual(values=c("red", "blue"))+
theme(legend.position = c(0.35,0.95),
legend.justification = c("right","top"))+
theme(axis.text.x = element_text(angle=90))+
labs(title="SARS-CoV2 en Peru", y="Pruebas positivas y pruebas realizadas",
x="Fecha", caption="Source :varios")+
geom_vline(xintercept = "2020-03-06") +
geom_vline(xintercept = "2020-03-11") +
geom_vline(xintercept = "2020-03-12") +
geom_vline(xintercept = "2020-03-15") +
geom_vline(xintercept = "2020-03-26") +
geom_vline(xintercept = "2020-03-31") +
geom_vline(xintercept = "2020-04-02") +
geom_vline(xintercept = "2020-04-08") +
annotate("text", x = "2020-03-07", y = 3000,
label = " Primer Caso", size = 2.5)+
annotate("text", x = "2020-03-11", y = 4000,
label = " Cierre colegios", size = 2.5)+
annotate("text", x = "2020-03-12", y = 5000,
label = " Cierre universidades", size = 2.5)+
annotate("text", x = "2020-03-15", y = 6000,
label = " inicio de cuarentena", size = 2.5)+
annotate("text", x = "2020-03-26", y = 7000,
label = " Extension cuarentena", size = 2.5)+
annotate("text", x = "2020-04-02", y = 9000,
label = " Restriccion por sexo", size = 2.5)+
annotate("text", x = "2020-03-31", y = 8000,
label = " toque de queda 18pm-5am", size = 2.5)+
annotate("text", x = "2020-04-07", y = 10000,
label = " Extension cuarentena", size = 2.5)
setwd("~/covid19/outputs_covid19/")
# cambio n[umero
png(filename="20200409_pruebas_vs_positivos_COVID19.png")
ggplot(acumulado1, aes(FECHA, value, colour=variable,group=variable)) +
geom_line() +
scale_colour_manual(values=c("red", "blue"))+
theme(legend.position = c(0.35,0.95),
legend.justification = c("right","top"))+
theme(axis.text.x = element_text(angle=90))+
labs(title="SARS-CoV2 en Peru", y="Pruebas positivas y pruebas realizadas",
x="Fecha", caption="Source :varios")+
geom_vline(xintercept = "2020-03-06") +
geom_vline(xintercept = "2020-03-11") +
geom_vline(xintercept = "2020-03-12") +
geom_vline(xintercept = "2020-03-15") +
geom_vline(xintercept = "2020-03-26") +
geom_vline(xintercept = "2020-03-31") +
geom_vline(xintercept = "2020-04-02") +
geom_vline(xintercept = "2020-04-08") +
annotate("text", x = "2020-03-07", y = 3000,
label = " Primer Caso", size = 2.5)+
annotate("text", x = "2020-03-11", y = 4000,
label = " Cierre colegios", size = 2.5)+
annotate("text", x = "2020-03-12", y = 5000,
label = " Cierre universidades", size = 2.5)+
annotate("text", x = "2020-03-15", y = 6000,
label = " inicio de cuarentena", size = 2.5)+
annotate("text", x = "2020-03-26", y = 7000,
label = " Extension cuarentena", size = 2.5)+
annotate("text", x = "2020-04-02", y = 9000,
label = " Restriccion por sexo", size = 2.5)+
annotate("text", x = "2020-03-31", y = 8000,
>>>>>>> 0bc1bfd62aa0bed11cca6feae32df235b9fc6450
label = " toque de queda 18pm-5am", size = 2.5)+
annotate("text", x = "2020-04-07", y = 10000,
label = " Extension cuarentena", size = 2.5)
dev.off()
